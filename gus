#!/bin/bash

# gus - get url status v0.1b
# Copyright (C) 2013 by Oskar Andersson <alu@byteberry.net>

# Permission is hereby granted, free of charge, to any person obtaining a copy
# of this software and associated documentation files (the "Software"), to deal
# in the Software without restriction, including without limitation the rights
# to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
# copies of the Software, and to permit persons to whom the Software is
# furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice shall be included in
# all copies or substantial portions of the Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
# AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
# OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN
# THE SOFTWARE.
#
# This script can be found at:
# https://github.com/alu-/gus

USAGE="Usage: $0 [-f file] [--help] [--version]\nFile could be an URL or file containing URLs on each line"
VERSION="v0.1b"
VERSTR="gus (Get Url Status), version ${VERSION}"

if [ -z "$1" ]
        then
                echo -e $USAGE
                exit 0
fi

while [ $# -gt 0 ]; do
        case "$1" in
        --help)         shift ; echo -e $USAGE ;;
        --version)      shift ; do_version=y ;;
        --)             shift ; break ;;
        -*)             echo "gus: ${1}: invalid option" >&2
                        echo "$USAGE" >& 2
                        exit 2 ;;
        *)              break ;;
        esac
done

# Identify if file or url

if [ -f $1 ];
then
        echo "File $1 exists."
else
        echo "File $1 does not exist."
        exit 0
fi

while read line
do
        URL=$line
        RESPONSECODE=$(curl -o /dev/null --silent --head --write-out '%{http_code}\n' http://argonova2013.utv.se.argonova-web.kontrollpanelen.se/$URL)
        printf "%s\t%s\n" $URL $RESPONSECODE
#       echo -e "$name \t $RESPONSECODE"
done < $1
